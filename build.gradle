plugins {
    id 'com.github.johnrengelman.shadow' version '8.1.1'
	id 'fabric-loom' version "${loom_version}"
	id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
	archivesName = project.archives_base_name
}

repositories {
    exclusiveContent {
        forRepository {
            maven {
                name = "Modrinth"
                url = "https://api.modrinth.com/maven"
            }
        }
        filter {
            includeGroup "maven.modrinth"
        }
    }
    maven {
        url "https://maven.latvian.dev/releases"
        content {
            includeGroup "dev.latvian.mods"
        }
    }
}

dependencies {
	minecraft "com.mojang:minecraft:${project.minecraft_version}"
	mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
	modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

	modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"
    modImplementation "maven.modrinth:bbs-mod:${project.bbs_version}-${project.minecraft_version}"

    implementation("org.graalvm.polyglot:polyglot:${js_version}")
    implementation("org.graalvm.js:js-scriptengine:${js_version}")
    implementation("org.graalvm.sdk:graal-sdk:${js_version}")
    implementation("org.graalvm.truffle:truffle-api:${js_version}")
    implementation("org.graalvm.js:js:${js_version}")

    shadow("org.graalvm.polyglot:polyglot:${js_version}")
    shadow("org.graalvm.js:js-scriptengine:${js_version}")
    shadow("org.graalvm.sdk:graal-sdk:${js_version}")
    shadow("org.graalvm.truffle:truffle-api:${js_version}")
    shadow("org.graalvm.js:js:${js_version}")
}

tasks{
    shadowJar {
        archiveBaseName.set("mappet")
        archiveClassifier.set("all")
        manifest {
            attributes("Main-Class" : "com.theuran.mappet.Mappet")
        }
        mergeServiceFiles()
        configurations = [project.configurations.shadow]
    }
}

processResources {
	inputs.property "version", project.version

	filesMatching("fabric.mod.json") {
		expand "version": inputs.properties.version
	}
}

tasks.withType(JavaCompile).configureEach {
	it.options.release = 17
}

java {
	withSourcesJar()

	sourceCompatibility = JavaVersion.VERSION_17
	targetCompatibility = JavaVersion.VERSION_17
}

loom {

}